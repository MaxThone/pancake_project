<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="f5c9f2b6-a3a5-4a26-919a-873e03779fea" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test_project/round_A_1.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/test_project/round_A_1.clj" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/out/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test_project/blabla.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="360">
              <caret line="24" column="27" selection-start-line="24" selection-start-column="27" selection-end-line="24" selection-end-column="27" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test_project/round_A_1.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="402">
              <caret line="83" column="7" lean-forward="true" selection-start-line="83" selection-start-column="7" selection-end-line="83" selection-end-column="7" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>flipping_pancakes</find>
    </findStrings>
    <replaceStrings>
      <replace>new_flipping_pancakes</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/clj_test_scripts/blabla.clj" />
        <option value="$PROJECT_DIR$/src/test_project/clj_test_scripts/blabla.clj" />
        <option value="$PROJECT_DIR$/src/test_project/core.clj" />
        <option value="$PROJECT_DIR$/doc/intro.md" />
        <option value="$PROJECT_DIR$/src/test_project/round_A.clj" />
        <option value="$PROJECT_DIR$/src/test_project/blabla.clj" />
        <option value="$PROJECT_DIR$/src/test_project/round_A_1.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="-1834" />
    <option name="y" value="37" />
    <option name="width" value="1708" />
    <option name="height" value="1057" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="test_project" type="b2602c69:ProjectViewProjectNode" />
              <item name="test_project" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="test_project" type="b2602c69:ProjectViewProjectNode" />
              <item name="test_project" type="462c0819:PsiDirectoryNode" />
              <item name="doc" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="test_project" type="b2602c69:ProjectViewProjectNode" />
              <item name="test_project" type="462c0819:PsiDirectoryNode" />
              <item name="input_files" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="test_project" type="b2602c69:ProjectViewProjectNode" />
              <item name="test_project" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="test_project" type="b2602c69:ProjectViewProjectNode" />
              <item name="test_project" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test_project" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1553503864487" />
    <property name="cursive.last.file.extension./Users/maxthone/Documents/Personal/Clojure_projects/test_project/src" value="clj" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/input_files/qual_2017" />
      <recent name="$PROJECT_DIR$/src/test_project" />
    </key>
  </component>
  <component name="ReplState" timestamp="1554140765013">{:repl-history {:ide [], :local [{:command &quot;(def test_vec [\\? \\G \\?])&quot;, :offset 25, :ns &quot;user&quot;} {:command &quot;(&gt; 5 4)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(&lt; 5 4)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(- 5 1)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(subvec [1 2 3 4 5 6 ] 0 3)&quot;, :offset 27, :ns &quot;user&quot;} {:command &quot;(subvec [1 2 3 4 5 6] 0 (count [1 2 3 4 5 6]))&quot;, :offset 46, :ns &quot;user&quot;} {:command &quot;(defn get_line_segment\n  [cake_vector]\n  (let [is? (fn [x] (= x \\?))\n        idx_? (.indexOf cake_vector \\?)\n        letter (first (filter (complement is?) cake_vector))\n        second_letter (second (filter(complement is?) cake_vector))\n        idx_letter (.indexOf cake_vector letter)\n        idx_next_letter (.indexOf cake_vector second_letter)\n        begin_idx (if (&lt; idx_? idx_letter) idx_? (- idx_? 1))\n        end_idx (if (= -1 idx_next_letter) (count cake_vector) idx_next_letter)\n        ]\n    (subvec cake_vector begin_idx end_idx)\n    ))&quot;, :offset 549, :ns &quot;user&quot;} {:command &quot;(get_line_segment [\\? \\G \\? \\? \\J \\?])&quot;, :offset 38, :ns &quot;user&quot;} {:command &quot;(get_line_segment [\\? \\G \\? \\? \\?])&quot;, :offset 35, :ns &quot;user&quot;} {:command &quot;(get_line_segment [\\G \\? \\J \\? \\?])&quot;, :offset 35, :ns &quot;user&quot;} {:command &quot;(defn get_line_segment\n  [cake_vector]\n  (let [is? (fn [x] (= x \\?))\n        idx_? (.indexOf cake_vector \\?)\n        letter (first (filter (complement is?) cake_vector))\n        next_letter (second (filter(complement is?) (subvec cake_vector idx_? (count cake_vector))))\n        idx_letter (.indexOf cake_vector letter)\n        idx_next_letter (.indexOf cake_vector next_letter)\n        begin_idx (if (&lt; idx_? idx_letter) idx_? (- idx_? 1))\n        end_idx (if (= -1 idx_next_letter) (count cake_vector) idx_next_letter)]\n    (subvec cake_vector begin_idx end_idx)))&quot;, :offset 566, :ns &quot;user&quot;} {:command &quot;(get_line_segment [\\G \\G \\J \\? \\?])&quot;, :offset 35, :ns &quot;user&quot;} {:command &quot;(defn get_line_segment\n  [cake_vector]\n  (let [is? (fn [x] (= x \\?))\n        idx_? (.indexOf cake_vector \\?)\n        letter (first (filter (complement is?) cake_vector))\n        next_letter (second (filter(complement is?) (subvec cake_vector idx_? (count cake_vector))))\n        idx_letter (.indexOf cake_vector letter)\n        idx_next_letter (.indexOf cake_vector next_letter)\n        begin_idx (if (&lt; idx_? idx_letter) idx_? (- idx_? 1))\n        end_idx (if (= -1 idx_next_letter) (count cake_vector) idx_next_letter)]\n    (pprint next_letter)\n    (pprint idx_next_letter)\n    (subvec cake_vector begin_idx end_idx)))&quot;, :offset 620, :ns &quot;user&quot;} {:command &quot;(defn get_line_segment\n  [cake_vector]\n  (let [is? (fn [x] (= x \\?))\n        idx_? (.indexOf cake_vector \\?)\n        letter (first (filter (complement is?) cake_vector))\n        next_letter (first (filter(complement is?) (subvec cake_vector idx_? (count cake_vector))))\n        idx_letter (.indexOf cake_vector letter)\n        idx_next_letter (.indexOf cake_vector next_letter)\n        begin_idx (if (&lt; idx_? idx_letter) idx_? (- idx_? 1))\n        end_idx (if (= -1 idx_next_letter) (count cake_vector) idx_next_letter)]\n    (pprint next_letter)\n    (pprint idx_next_letter)\n    (subvec cake_vector begin_idx end_idx)))&quot;, :offset 619, :ns &quot;user&quot;} {:command &quot;(get_line_segment [\\G \\G \\J \\? \\? \\L \\?])&quot;, :offset 41, :ns &quot;user&quot;} {:command &quot;(defn get_line_segment\n  [cake_vector]\n  (let [is? (fn [x] (= x \\?))\n        idx_? (.indexOf cake_vector \\?)\n        letter (first (filter (complement is?) cake_vector))\n        next_letter (first (filter(complement is?) (subvec cake_vector idx_? (count cake_vector))))\n        idx_letter (.indexOf cake_vector letter)\n        idx_next_letter (.indexOf cake_vector next_letter)\n        begin_idx (if (&lt; idx_? idx_letter) idx_? (- idx_? 1))\n        end_idx (if (= -1 idx_next_letter) (count cake_vector) idx_next_letter)]\n    (subvec cake_vector begin_idx end_idx)))&quot;, :offset 565, :ns &quot;user&quot;} {:command &quot;(defn get_line_segment\n  [cake_vector]\n  (let [is? (fn [x] (= x \\?))\n        idx_? (.indexOf cake_vector \\?)\n        letter (first (filter (complement is?) cake_vector))\n        next_letter (first (filter(complement is?) (subvec cake_vector idx_? (count cake_vector))))\n        idx_letter (.indexOf cake_vector letter)\n        idx_next_letter (.indexOf cake_vector next_letter)\n        begin_idx (if (&lt; idx_? idx_letter) idx_? (- idx_? 1))\n        end_idx (if (= -1 idx_next_letter) (count cake_vector) idx_next_letter)]\n    [begin_idx end_idx letter]))&quot;, :offset 553, :ns &quot;user&quot;} {:command &quot;(conj [[1 2 3]] 1 2)&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(conj [1 2 3] 1 2)&quot;, :offset 18, :ns &quot;user&quot;} {:command &quot;(conj [[1 2 3]] [1 2])&quot;, :offset 22, :ns &quot;user&quot;} {:command &quot;(conj [1 2 3] (1 2))&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(conj [1 2 3] '(1 2))&quot;, :offset 21, :ns &quot;user&quot;} {:command &quot;(conj [1 2 3] [1 2])&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(get [1 2 3] 1)&quot;, :offset 15, :ns &quot;user&quot;} {:command &quot;(subvec [1 2 3] 0 2)&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(subvec [1 2 3] 3 3)&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(defn get_replace_data\n  [cake_vector]\n  (let [is? (fn [x] (= x \\?))\n        start_idx (.indexOf cake_vector \\?)\n        letter (if (= 0 start_idx)\n                 (first (filter (complement is?) cake_vector))\n                 (get cake_vector (- start_idx 1)))\n        idx_letter (.indexOf cake_vector letter)\n        next_letter (first\n                      (filter(complement is?)\n                             (subvec cake_vector (+ (max start_idx idx_letter) 1)\n                                     (count cake_vector))))\n        idx_next_letter (.indexOf cake_vector next_letter)\n        end_idx (if (= -1 idx_next_letter) (count cake_vector) idx_next_letter)]\n    [start_idx end_idx letter]))&quot;, :offset 699, :ns &quot;user&quot;} {:command &quot;(count test_pie)&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;(print final_vec)&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;(pprint (subvec test_pie 0))&quot;, :offset 28, :ns &quot;user&quot;} {:command &quot;(doc subvec)&quot;, :offset 12, :ns &quot;user&quot;} {:command &quot;(pprint (subvec test_pie 0 1))&quot;, :offset 30, :ns &quot;user&quot;} {:command &quot;(pprint (get test_pie 0))&quot;, :offset 25, :ns &quot;user&quot;} {:command &quot;(doc assoc)&quot;, :offset 11, :ns &quot;user&quot;} {:command &quot;(def test_vec [0 1 2 3 4 5])&quot;, :offset 28, :ns &quot;user&quot;} {:command &quot;(assoc test_vec 0 8)&quot;, :offset 20, :ns &quot;user&quot;} {:command &quot;(pprint test_pie)&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;(get test_pie (inc 1))&quot;, :offset 22, :ns &quot;user&quot;} {:command &quot;(replace_whole_line (get test_pie (inc 1)))&quot;, :offset 43, :ns &quot;user&quot;} {:command &quot;(plus-five 10)&quot;, :offset 14, :ns &quot;user&quot;} {:command &quot;(filter odd? '(2 4 6 7 8 10))&quot;, :offset 29, :ns &quot;user&quot;} {:command &quot;(filter odd? '(2 4 6  8 10))&quot;, :offset 28, :ns &quot;user&quot;} {:command &quot;(fill_pie test_pie 0)&quot;, :offset 21, :ns &quot;user&quot;} {:command &quot;(fill_pie test_pie 0 nil)&quot;, :offset 25, :ns &quot;user&quot;} {:command &quot;()&quot;, :offset 2, :ns &quot;user&quot;} {:command &quot;(cons 12 nil)&quot;, :offset 13, :ns &quot;user&quot;} {:command &quot;(cons 1 (cons 2 nil))&quot;, :offset 21, :ns &quot;user&quot;} {:command &quot;(cons 12 (cons 99 (cons 37 nil)))&quot;, :offset 33, :ns &quot;user&quot;} {:command &quot;(read-string \&quot;(+ 1 2)\&quot;)&quot;, :offset 23, :ns &quot;user&quot;} {:command &quot;(pprint (read-string \&quot;(+ 1 2)\&quot;))&quot;, :offset 32, :ns &quot;user&quot;} {:command &quot;(count (read-string \&quot;(+ 1 2)\&quot;))&quot;, :offset 31, :ns &quot;user&quot;} {:command &quot;(first (read-string \&quot;(+ 1 2)\&quot;))&quot;, :offset 31, :ns &quot;user&quot;} {:command &quot;(quote 3)&quot;, :offset 9, :ns &quot;user&quot;} {:command &quot;(quote a)&quot;, :offset 9, :ns &quot;user&quot;} {:command &quot;(quote (+ 1 2))&quot;, :offset 15, :ns &quot;user&quot;} {:command &quot;(list + 1 2)&quot;, :offset 12, :ns &quot;user&quot;} {:command &quot;(cons 'if (cons (cons '= (cons 'idx (cons (cons 'count (cons 'pie nil)) nil))) (cons 'pie (cons 3 nil))))&quot;, :offset 105, :ns &quot;user&quot;} {:command &quot;(symbol \&quot;foo\&quot;)&quot;, :offset 14, :ns &quot;user&quot;} {:command &quot;(= (symbol \&quot;foo\&quot;) (symbol \&quot;foo\&quot;))&quot;, :offset 33, :ns &quot;user&quot;} {:command &quot;(= 'foo 'foo)&quot;, :offset 13, :ns &quot;user&quot;} {:command &quot;(def foo 10)&quot;, :offset 12, :ns &quot;user&quot;} {:command &quot;(eval (symbol \&quot;foo\&quot;))&quot;, :offset 21, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  (vector body))&quot;, :offset 45, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `(vector ~@body))&quot;, :offset 48, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `(vector '~@body))&quot;, :offset 49, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `'~@body)&quot;, :offset 40, :ns &quot;user&quot;} {:command &quot;(reverse '(2 1))&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `'~@(reverse body))&quot;, :offset 50, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  (let [x (reverse body)]\n    `'~@x))&quot;, :offset 66, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  (let [x (reverse body)]\n    `~@x))&quot;, :offset 65, :ns &quot;user&quot;} {:command &quot;(trololo 1 2 +)&quot;, :offset 15, :ns &quot;user&quot;} {:command &quot;(trololo (1 2 +))&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  (let [x (reverse (first body))]\n    `~@x))&quot;, :offset 73, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  (let [x (reverse (first body))]\n    '`~@x))&quot;, :offset 74, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  body)&quot;, :offset 36, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `(list ~@body))&quot;, :offset 46, :ns &quot;user&quot;} {:command &quot;(trololo + 1 2)&quot;, :offset 15, :ns &quot;user&quot;} {:command &quot;(macroexpand-1 (trololo + 1 2))&quot;, :offset 31, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `~@body)&quot;, :offset 39, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  (do `~@body))&quot;, :offset 44, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `(do ~@body))&quot;, :offset 44, :ns &quot;user&quot;} {:command &quot;(defn mess-1\n  [head &amp; tail]\n  (when head\n    (cons (if (= 1 head) 10 (if (seq? head) (mess-1 head))) (mess-1 tail))))&quot;, :offset 118, :ns &quot;user&quot;} {:command &quot;(defmacro trololo\n  [&amp; body]\n  `(do ~@(mess-1 body)))&quot;, :offset 53, :ns &quot;user&quot;} {:command &quot;(macroexpand-1 '(trololo + 1 2))&quot;, :offset 32, :ns &quot;user&quot;} {:command &quot;(doc cons)&quot;, :offset 10, :ns &quot;user&quot;} {:command &quot;(cons 5 (1 2 3))&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;(cons 5 4)&quot;, :offset 10, :ns &quot;user&quot;} {:command &quot;(cons 5 '(4 5 8))&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;(eval (cons (symbol \&quot;+\&quot;) cons 3 (cons 3 nil)))&quot;, :offset 46, :ns &quot;user&quot;} {:command &quot;(eval (cons (symbol \&quot;+\&quot;) (cons 3 (cons 3 nil))))&quot;, :offset 48, :ns &quot;user&quot;} {:command &quot;(cons (symbol \&quot;+\&quot;) (cons 3) (const 3 nil))&quot;, :offset 42, :ns &quot;user&quot;} {:command &quot;(cons (symbol \&quot;+\&quot;) (cons 3 (const 3 nil)))&quot;, :offset 42, :ns &quot;user&quot;} {:command &quot;(eval (cons (symbol \&quot;+\&quot;) (cons 3 (const 3 nil))))&quot;, :offset 49, :ns &quot;user&quot;} {:command &quot;(cons (symbol \&quot;+\&quot;) (cons 3 (cons 3 nil)))&quot;, :offset 41, :ns &quot;user&quot;} {:command &quot;(symbol \&quot;+\&quot; 3 3)&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;'(symbol \&quot;+\&quot; 3 3)&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;'((symbol \&quot;+\&quot;) 3 3)&quot;, :offset 19, :ns &quot;user&quot;} {:command &quot;((symbol \&quot;+\&quot;) 3 3)&quot;, :offset 18, :ns &quot;user&quot;} {:command &quot;(doc symbol)&quot;, :offset 12, :ns &quot;user&quot;} {:command &quot;(symbol \&quot;+\&quot;)&quot;, :offset 12, :ns &quot;user&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="test_1" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="test_project" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f5c9f2b6-a3a5-4a26-919a-873e03779fea" name="Default Changelist" comment="" />
      <created>1552742762793</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1552742762793</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="-1834" y="37" width="1708" height="1057" extended-state="0" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.2004802" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="UI Designer" order="4" />
      <window_info id="Capture Tool" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="0" />
      <window_info anchor="bottom" id="Terminal" order="1" weight="0.32951653" />
      <window_info anchor="bottom" id="Event Log" order="2" sideWeight="0.7070117" side_tool="true" weight="0.32872927" />
      <window_info anchor="bottom" id="Message" order="3" />
      <window_info anchor="bottom" id="Find" order="4" sideWeight="0.49928468" visible="true" weight="0.36386767" />
      <window_info anchor="bottom" id="Run" order="5" sideWeight="0.35897437" weight="0.32951653" />
      <window_info anchor="bottom" id="Debug" order="6" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="7" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="8" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="9" />
      <window_info active="true" anchor="bottom" id="REPL" order="10" sideWeight="0.64102566" side_tool="true" visible="true" weight="0.37098446" />
      <window_info anchor="right" id="Palette" order="0" />
      <window_info anchor="right" id="Theme Preview" order="1" />
      <window_info anchor="right" id="Maven" order="2" />
      <window_info anchor="right" id="Leiningen" order="3" />
      <window_info anchor="right" id="Capture Analysis" order="4" />
      <window_info anchor="right" id="Palette&#9;" order="5" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="6" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="7" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="8" weight="0.25" />
    </layout>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" column="70" lean-forward="true" selection-start-line="12" selection-start-column="70" selection-end-line="12" selection-end-column="70" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/encodings.xml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="75">
          <caret line="5" column="48" lean-forward="true" selection-start-line="5" selection-start-column="48" selection-end-line="5" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/input_files/qual_2017/A-large-practice.in">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1144" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/doc/intro.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" column="7" selection-start-line="6" selection-start-column="7" selection-end-line="6" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/input_files/qual_2017/large_output.txt">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/input_files/qual_2017/output.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1500">
          <caret line="100" selection-start-line="100" selection-end-line="100" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/input_files/qual_2017/A-small-practice.in">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test_project/round_A.clj" />
    <entry file="file://$PROJECT_DIR$/src/test_project/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="105">
          <caret line="7" column="7" selection-start-line="7" selection-start-column="7" selection-end-line="7" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test_project/blabla.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="360">
          <caret line="24" column="27" selection-start-line="24" selection-start-column="27" selection-end-line="24" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test_project/round_A_1.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="402">
          <caret line="83" column="7" lean-forward="true" selection-start-line="83" selection-start-column="7" selection-end-line="83" selection-end-column="7" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <last-edited>scala-sdk-2.12.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>test_project</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: clojure-complete:0.2.4</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>